<project name="visaAPI" default="make" basedir="">

    <property file="../../release_version.properties"/>

    <!-- Globale Properties -->
    <property name="src" value="src"/>
    <property name="meta" value="META-INF"/>
    <property name="nls" value="nls"/>
    <property name="xml" value="${pathxml}/xml"/>
    <property name="base_src" value="src"/>
    <property name="test.src" value="test"/>
    <property name="base_web" value="web"/>
    <property name="debug" value="on"/>
    <property name="classpath" value="lib"/>
    <property name="lib.jars" value="lib"/>
    <property name="deps" value="deps"/>
    <property name="outbase" value="dist"/>
    <property name="test.build" value="${outbase}/test"/>
    <property name="jar.path" location="${outbase}/jar"/>
    <property name="message.bean.jar.name" value="mdb-ejb-tasktimer.jar"/>
    <property name="dist.path" value="dist" />
    <property name="war.path" location="${dist.path}/war"/>
    <property name="ear.path" location="${outbase}/release"/>
    <property name="build" value="${outbase}/WEB-INF/classes"/>
    <property name="build2" value="${dist.path}/classes"/>
    <property name="localLib" value="${outbase}/WEB-INF/lib"/>
    <property name="jar.name" value="integration.jar"/>
    <property name="source.jar.name" value="integrationsrc.jar"/>
    <!--property name="doc.path" value="${outbase}/javadocs"/-->

    <property name="base.jar.module" value="core/dist/jar"/>
    <property name="base.jar.name" value="cwbase.jar"/>
    <property name="recworks.jar.module" value="recworks/dist/jar"/>
    <property name="recworks.jar.name" value="recworks.jar"/>
    <property name="facade.jar.name" value="facade.jar"/>
    <property name="base.source.jar.name" value="cwbasesrc.jar"/>
    <property name="facade.jar.module" value="facade/dist/jar"/>
    <property name="facade.jar.name" value="facade.jar"/>
    <property name="weblib.jar.name" value="weblib.jar"/>
    <property name="weblib.jar.module" value="weblib/dist/jar"/>
    <property name="facade.source.jar.name" value="facadesrc.jar"/>
    <property name="integration.jar.module" value="integration/dist/jar"/>
    <property name="integration.jar.name" value="integration.jar"/>
    <property name="mdb.jar.module" value="integration/dist/jar"/>
    <property name="mdb.jar.name" value="mdb-ejb.jar"/>


    <property name="webservice.war.name" value="visaAPI.war"/>
    <property name="webservice.ear.name" value="visaAPI"/>
    <property name="webservice.schema.dir" value="schema"/>
    <property name="application.xml.dir" value="META-INF"/>


    <!--
        this property will be reset by another script who controls the whole
        building process
    -->
    <property name="build.dependencies" value="${deps}" />

    <!-- Setup the classpath -->
    <path id="project.class.path">
        <fileset dir="${classpath}">
            <include name="**/*.zip"/>
            <include name="**/*.jar"/>
        </fileset>
        <fileset dir="${build.dependencies}">
            <include name="**/*.zip"/>
            <include name="**/*.jar"/>
        </fileset>
    </path>


    <target name="init">
        <mkdir dir="${outbase}"/>
        <mkdir dir="${outbase}/lib"/>
        <mkdir dir="${outbase}/jar"/>
        <mkdir dir="${war.path}"/>
        <mkdir dir="${build}"/>
        <mkdir dir="${build2}"/>
        <mkdir dir="${deps}"/>
        <mkdir dir="${test.build}"/>
        <mkdir dir="${outbase}/WEB-INF/lib"/>
    </target>

    <target name="lib-local" depends="init">
        <copy todir="${outbase}/lib">
            <fileset dir="lib" />
        </copy>
        <copy todir="${deps}">
            <fileset dir="lib" />
        </copy>
    </target>

    <target name="xml" depends="init">
        <copy todir="${outbase}/WEB-INF">
            <fileset dir="WEB-INF">
            </fileset>
        </copy>
        <copy todir="${outbase}/WEB-INF/classes/com/hdfs/visa/api/mapper">
            <fileset dir="src/com/hdfs/visa/api/mapper">
                <include name="*.xml"/>
            </fileset>
        </copy>
    </target>



    <target name="build-local" depends="lib-local, make"/>

    <!-- jar the base code -->
    <target name="make" depends="compile, xml, lib-local">

        <property name="manifest.class.path1" value="lib/hibernate-validator-annotation-processor-6.0.19.Final.jar lib/javax.el-3.0.1-b11.jar lib/jboss-logging-3.4.0.Final.jar lib/classmate-1.5.0.jar lib/hibernate-validator-6.0.19.Final.jar lib/commons-lang3-3.8.1.jar lib/commons-pool2-2.6.0.jar lib/log4j-slf4j-impl-2.11.2.jar lib/log4j-api-2.11.2.jar lib/log4j-core-2.11.2.jar lib/mybatis-3.5.1.jar lib/mybatis-spring-2.0.1.jar lib/slf4j-api-1.7.26.jar lib/spring-aop-5.1.6.RELEASE.jar lib/spring-beans-5.1.7.RELEASE.jar lib/spring-context-5.1.6.RELEASE.jar lib/spring-core-5.1.7.RELEASE.jar lib/spring-expression-5.1.7.RELEASE.jar lib/spring-jcl-5.1.7.RELEASE.jar lib/spring-web-5.1.7.RELEASE.jar lib/spring-webmvc-5.1.7.RELEASE.jar /WEB-INF/classes lib/validation-api-2.0.1.Final.jar lib/jackson-annotations-2.9.9.jar lib/jackson-core-2.9.9.jar lib/jackson-databind-2.9.9.jar lib/spring-jdbc-5.1.7.RELEASE.jar lib/spring-tx-5.1.7.RELEASE.jar lib/spring-security-config-5.1.5.RELEASE.jar lib/spring-security-core-5.1.5.RELEASE.jar lib/spring-security-web-5.1.5.RELEASE.jar lib/spring-security-ldap-5.1.5.RELEASE.jar lib/spring-ldap-core-2.3.2.RELEASE.jar" />

        <!-- assemble webservice ear file -->
        <tstamp/>
        <echo message="Creating the visaAPI.war file..."/>

        <war warfile="${war.path}/${webservice.war.name}"
             webxml="${outbase}/WEB-INF/web.xml">
            <manifest>
                <attribute name="Class-Path" value="${manifest.class.path1}"/>
                <!-- CWX-111 -->
                <attribute name="Implementation-Version" value="${Implementation-Version.VISA_API}"/>
            </manifest>
            <fileset dir="${outbase}">
                <include name="*.jsp"/>
                <include name="WEB-INF/**/*.class"/>
                <include name="WEB-INF/classes/**/*.xml"/>
                <include name="WEB-INF/**/*.properties"/>
                <include name="WEB-INF/lib/*.jar"/>
                <include name="WEB-INF/*.xmi"/>
                <include name="WEB-INF/applicationContext.xml"/>
                <exclude name="WEB-INF/web.xml"/>
            </fileset>
        </war>
    </target>

    <target name="test" >

        <junit printsummary="yes" haltonfailure="no" failureproperty="test.failed">

            <classpath>
                <pathelement location="${jar.path}"/>
                <pathelement location="${test.build}"/>
                <pathelement path="${classpath}"/>
                <pathelement path="${java.class.path}"/>
            </classpath>

            <formatter type="plain" usefile="no"/>
            <!--<formatter type="xml" />-->

            <batchtest todir="${outbase}">
                <fileset dir="${test.build}" includes="**/com/**"/>

            </batchtest>

            <!--<test name="test.com.hdfs.payoffQuote.PayoffQuoteServiceTest"-->
            <!--haltonfailure="no" >-->
            <!--<formatter type="plain"/>-->
        </junit>

        <!--<junitreport todir="${outbase}">-->
        <!--<report format="noframes" todir="${outbase}/testResults"/>-->
        <!--<fileset dir="${outbase}">-->
        <!--<include name="TEST-*.xml" />-->
        <!--</fileset>-->
        <!--</junitreport>-->

        <fail message="Test failure detected, check test results." if="test.failed"/>
    </target>

    <target name="local-share" depends="clean, ear-local">
        <copy todir="R:\workspace" file="${outbase}/visaAPI_${Implementation-Version.VISA_API}.ear"/>
    </target>

    <target name="ear-local" depends="build-local">
        <ear destfile="${outbase}/${webservice.ear.name}_${Implementation-Version.VISA_API}.ear" compress="false" appxml="${application.xml.dir}/application.xml" update="true">
            <!-- CWX-111 -->
            <manifest>
                <attribute name="Implementation-Version" value="${Implementation-Version.VISA_API}"/>
            </manifest>
            <fileset dir="dist/war" includes="${webservice.war.name}"/>

            <fileset dir="${jar.path}"/>
            <include name="lib/*.jar"/>
            <fileset dir="${outbase}">
                <include name="lib/*.jar"/>
            </fileset>
        </ear>
    </target>

    <target name="clean" description="deletes the classes" >
        <echo message="clean module visaAPI"/>
        <delete includeEmptyDirs="true">
            <fileset dir="${deps}" includes="**/*"/>
            <fileset dir="${outbase}" includes="**/*"/>
        </delete>
    </target>

    <!-- compile the base code -->
    <target name="compile" depends="init">
        <echo message="Compiling integration...(${base_src})"/>
        <javac srcdir="${base_src}" destdir="${build}" debug="${debug}">
            <classpath refid="project.class.path"/>
        </javac>
        <javac srcdir="${test.src}" destdir="${test.build}" debug="${debug}">
            <classpath refid="project.class.path"/>
        </javac>
        <echo message="Compilation complete"/>
    </target>

</project>
